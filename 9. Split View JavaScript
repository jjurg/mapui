// static/js/split_view.js
class SplitMapViewer {
    constructor() {
        this.map1 = new maplibregl.Map({
            container: 'map1',
            style: 'https://demotiles.maplibre.org/style.json',
            center: [0, 0],
            zoom: 2
        });

        this.map2 = new maplibregl.Map({
            container: 'map2',
            style: 'https://demotiles.maplibre.org/style.json',
            center: [0, 0],
            zoom: 2
        });

        this.syncMaps();
        this.setupControls();
    }

    syncMaps() {
        // Sync zoom and pan between maps
        ['moveend', 'zoomend', 'rotateend', 'pitchend'].forEach(event => {
            this.map1.on(event, () => {
                this.map2.setCenter(this.map1.getCenter());
                this.map2.setZoom(this.map1.getZoom());
                this.map2.setBearing(this.map1.getBearing());
                this.map2.setPitch(this.map1.getPitch());
            });

            this.map2.on(event, () => {
                this.map1.setCenter(this.map2.getCenter());
                this.map1.setZoom(this.map2.getZoom());
                this.map1.setBearing(this.map2.getBearing());
                this.map1.setPitch(this.map2.getPitch());
            });
        });
    }

    setupControls() {
        // Add controls for both maps
    }
}

const viewer = new SplitMapViewer();
